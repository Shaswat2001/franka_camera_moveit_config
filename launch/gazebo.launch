<?xml version="1.0"?>
<launch>

    <arg name = "x_pos" default = "0.0"/>
    <arg name = "y_pos" default = "0.0"/>
    <arg name = "z_pos" default = "0"/>

    <arg name="gazebo"      default="true"  doc="Should the gazebo simulation be launched? Use false in case if you want to include this file and launch gazebo yourself" />
    <arg name="arm_id"      default="fr3" doc="Name of the robot to spawn" />
    <arg name="use_gripper" default="true"  doc="Should a franka hand be mounted on the flange?" />
    <arg name="roll"        default="0"     doc="How much to rotate the base of the robot around its X-axis in [rad]?" />
    <arg name="pitch"       default="0"     doc="How much to rotate the base of the robot around its Y-axis in [rad]?" />
    <arg name="yaw"         default="0"     doc="How much to rotate the base of the robot around its Z-axis in [rad]?" />
    <arg name="xacro_args"  default=""      doc="Additional arguments to pass to panda.urdf.xacro" />

  <!-- Gazebo options -->
  <arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  <arg name="initial_joint_positions"
      doc="Initial joint configuration of the panda. Specify as a list of name/value pairs in form of '-J [name-of-joint] [value-in-rad]'. Default is a 90 degree bend in the elbow"
      default="-J fr3_joint1 0
                  -J fr3_joint2 -0.785398163
                  -J fr3_joint3 0
                  -J fr3_joint4 -2.35619449
                  -J fr3_joint5 0
                  -J fr3_joint6 1.57079632679
                  -J fr3_joint7 0.785398163397
                  -J fr3_finger_joint1 0.001
                  -J fr3_finger_joint2 0.001"/>

  <!-- Start Gazebo paused to allow the controllers to pickup the initial pose -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
    <arg name="paused" value="true"/>
  </include>

  <!-- Set the robot urdf on the parameter server -->
  <param name="robot_description" command="xacro $(find franka_description)/robots/fr3/fr3.urdf.xacro
                                              gazebo:=true
                                              hand:=$(arg use_gripper)
                                              arm_id:=$(arg arm_id)
                                              xyz:='$(arg x_pos) $(arg y_pos) $(arg z_pos)'
                                              rpy:='$(arg roll) $(arg pitch) $(arg yaw)'
                                              $(arg xacro_args)" />

  <!-- Unpause the simulation after loading the robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

  <!-- Spawn the robot in Gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model $(arg arm_id) $(arg unpause) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- Load the controller parameters onto the parameter server -->
  <!-- <rosparam file="$(find franka_camera_config)/config/gazebo_controllers.yaml" /> -->
  <include file="$(find franka_camera_config)/launch/ros_controllers.launch"/>

  <!-- Spawn the Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
</launch>